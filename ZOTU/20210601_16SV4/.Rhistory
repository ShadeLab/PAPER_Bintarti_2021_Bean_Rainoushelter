dis.plant.bc <- ggplot(map.pcoa.bc.mod, aes(x=Plant, y=Dispersion, fill=Plant))+
geom_violin(alpha=0.4, position = position_dodge(width = .75),size=0.5, trim = F) +
#scale_fill_manual(labels = c("A", "B", "C"),values=c("#CC6677", "#DDCC77","#117733"))+
scale_fill_viridis(discrete = T)+
#geom_jitter(position = position_jitter(width = 0.1, height = 0, seed=13), alpha=0.5)+
geom_point(shape = 21,size=2, position = position_jitterdodge(),alpha=1)+
theme_bw()+
expand_limits(x = 0, y = 0)+
labs(y="Dispersion", title = "(c)")+
#geom_text(data=new.dis.sum, aes(x=Plant,y=0.05+max.dis,label=Letter), vjust=0)+
geom_signif(comparisons = list(c("A", "B")),
annotations = "***", textsize = 6,
y_position = 0.85, tip_length = 0,
map_signif_level=TRUE, vjust = 0.5) +
geom_signif(comparisons = list(c("A", "C")),
annotations = "***", textsize = 6,
y_position =0.895, tip_length = 0,
map_signif_level=TRUE, vjust = 0.5) +
theme(legend.position="none",
axis.text.x=element_text(size = 14),
axis.text.y = element_text(size = 14),
strip.text.y = element_text(size=18, face = 'bold'),
plot.title = element_text(size = 20,  face = 'bold'),
axis.title.y =element_text(size=18,face="bold"),
axis.title.x = element_blank(),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
stat_summary(fun="median",geom="point", size=13, color="red", shape=95)
dis.plant.bc
dis.plant.bc
# dissimilarity indices for community ecologist to make a distance structure (Jaccard distance between samples)
otu_dist.its_bc <- vegdist(t(fgnorm), binary = F, method = "bray")
# CMD/classical multidimensional scaling (MDS) of a data matrix. Also known as principal coordinates analysis
otu_pcoa.its.bc <- cmdscale(otu_dist.its_bc, eig=T)
# scores of PC1 and PC2
ax1.scores.its.bc=otu_pcoa.its.bc$points[,1]
ax2.scores.its.bc=otu_pcoa.its.bc$points[,2]
# calculate percent variance explained, then add to plot
ax1.its.bc <- otu_pcoa.its.bc$eig[1]/sum(otu_pcoa.its.bc$eig)
ax2.its.bc <- otu_pcoa.its.bc$eig[2]/sum(otu_pcoa.its.bc$eig)
its.map.pcoa.bc <- cbind(its.map,ax1.scores.its.bc,ax2.scores.its.bc)
its.map.pcoa.bc
setwd('/Users/arifinabintarti/Documents/PAPER/Bean_seed_variability_Bintarti_2021/ITS/')
its.map <- read.csv("bean.var.map.its.csv")
head(its.map)
its.map.pcoa.bc <- cbind(its.map,ax1.scores.its.bc,ax2.scores.its.bc)
its.map.pcoa.bc
set.seed(1)
pod.pcoa.its.bc <- ggplot(data = its.map.pcoa.bc, aes(x=ax1.scores.its.bc, y=ax2.scores.its.bc))+
theme_bw()+
geom_point(data = its.map.pcoa.bc, aes(x = ax1.scores.its.bc, y = ax2.scores.its.bc, col=factor(Plant)),size=5, alpha =0.7)+
#scale_color_manual(labels = c("A1","A2", "A3","B1","B2","B3","B4","B5","B6","C5","C6","C7"),values=c("#440154FF", "#482677FF","#3F4788FF","#238A8DFF","#1F968BFF","#20A386FF","#29AF7FFF","#3CBB75FF","#56C667FF","#B8DE29FF","#DCE318FF","#FDE725FF"))+
scale_color_viridis(discrete = T) +
scale_x_continuous(name=paste("PCoA1:\n",round(ax1.its.bc,3)*100,"% var. explained", sep=""))+
scale_y_continuous(name=paste(round(ax2.its.bc,3)*100,"% var. explained", sep=""))+
#coord_fixed() +
labs(colour = "Plant", title = "(b) Fungi")+
theme(legend.position="right",
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = 20, face="bold"),
axis.text=element_text(size=14),
axis.title=element_text(size=15,face="bold"),
legend.text=element_text(size=14, face = 'bold'),
legend.title = element_text(size = 14, face = 'bold'),
legend.spacing.x = unit(0.05, 'cm'))
pod.pcoa.its2.bc <- pod.pcoa.its.bc + geom_text_repel(aes(label = Pod),size = 3, max.overlaps = Inf)
pod.pcoa.its2.bc
set.seed(1)
pod.pcoa.its.bc <- ggplot(data = its.map.pcoa.bc, aes(x=ax1.scores.its.bc, y=ax2.scores.its.bc))+
theme_bw()+
geom_point(data = its.map.pcoa.bc, aes(x = ax1.scores.its.bc, y = ax2.scores.its.bc, col=factor(Plant)),size=5, alpha =0.7)+
scale_color_manual(name = "Plant and Pod", labels = c("A (Pod A1:A3)", "B (Pod B1:B6)", "C (Pod C5:C7)"), values=c("#440154FF", "#287D8EFF","#FDE725FF"))+
#scale_color_viridis(discrete = T) +
scale_x_continuous(name=paste("PCoA1:\n",round(ax1.its.bc,3)*100,"% var. explained", sep=""))+
scale_y_continuous(name=paste(round(ax2.its.bc,3)*100,"% var. explained", sep=""))+
#coord_fixed() +
labs(colour = "Plant", title = "(b) Fungi")+
theme(legend.position="right",
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = 20, face="bold"),
axis.text=element_text(size=14),
axis.title=element_text(size=15,face="bold"),
legend.text=element_text(size=14),
legend.title = element_text(size = 14, face = 'bold'),
legend.spacing.x = unit(0.05, 'cm'))
pod.pcoa.its2.bc <- pod.pcoa.its.bc + geom_text_repel(aes(label = Pod),size = 3, max.overlaps = Inf)
pod.pcoa.its2.bc
set.seed  (13)
groups.plant.its <- factor(c(rep("A",11),rep("B",23), rep("C",11)))
mod.its.bc <- betadisper(otu_dist.its_bc, groups.plant.its)
mod.its.bc
mod.its.bc$distances
dispersion.its.bc <- as.data.frame(mod.its.bc$distance)
names(dispersion.its.bc)[names(dispersion.its.bc) == "mod.its.bc$distance"] <- "Dispersion"
#add dispersion index
dispersion.its.bc <- rownames_to_column(dispersion.its.bc, "Sample.id")
#join dispersion index to the map
its.map
its.map.bc.mod <- merge(its.map, dispersion.its.bc, by="Sample.id", all = T)
its.map.bc.mod
dispersion.its.bc
its.map.bc.mod
set.seed(1)
disperplot.its.bc <- ggplot(its.map.bc.mod, aes(x=Plant, y=Dispersion, fill=Plant))+
geom_violin(alpha=0.4, position = position_dodge(width = .75),size=0.5, trim = F) +
#scale_fill_manual(labels = c("A", "B", "C"),values=c("#CC6677", "#DDCC77","#117733"))+
scale_fill_viridis(discrete = T)+
geom_point(shape = 21,size=2, position = position_jitterdodge(),alpha=1)+
#geom_jitter(position = position_jitter(width = 0.1, height = 0, seed=13), alpha=0.5)+
theme_bw()+
expand_limits(x = 0, y = 0)+
labs(title= "(d)", y="Dispersion")+
theme(legend.position="none",
axis.text.x=element_text(size = 14),
axis.text.y = element_text(size = 14),
strip.text.y = element_text(size=18, face = 'bold'),
plot.title = element_text(size = 20, face = 'bold'),
#axis.title.x =element_text(size=18,face="bold"),
axis.title.y=element_blank(),
axis.title.x=element_blank(),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
stat_summary(fun="median",geom="point", size=13, color="red", shape=95)
disperplot.its.bc
setwd('/Users/arifinabintarti/Documents/Bean_seed_variability_Bintarti_2020/Figures')
library(patchwork)
PCoA.Beta.bc <- (pod.pcoa2.bc | pod.pcoa.its2.bc ) / (dis.plant.bc | disperplot.its.bc)
PCoA.Beta.bc
PCoA.Beta2.bc <- patchwork::patchworkGrob(PCoA.Beta.bc)
PCoA.Beta3.bc <- gridExtra::grid.arrange(PCoA.Beta2.bc, bottom =textGrob("Plant", gp=gpar(fontsize=18,fontface='bold')))
ggsave("Fig.S2ed.eps",
PCoA.Beta3.bc, device=cairo_ps,
width = 10, height = 9,
units= "in", dpi = 600)
disperplot.its.bc
dis.plant.bc
set.seed(1)
disperplot.its.bc <- ggplot(its.map.bc.mod, aes(x=Plant, y=Dispersion, fill=Plant))+
geom_violin(alpha=0.4, position = position_dodge(width = .75),size=0.5, trim = F) +
#scale_fill_manual(labels = c("A", "B", "C"),values=c("#CC6677", "#DDCC77","#117733"))+
scale_fill_viridis(discrete = T)+
geom_point(shape = 21,size=2, position = position_jitterdodge(),alpha=1)+
#geom_jitter(position = position_jitter(width = 0.1, height = 0, seed=13), alpha=0.5)+
theme_bw()+
expand_limits(x = 0, y = 0)+
labs(title= "(d)", y="Dispersion")+
theme(legend.position="none",
axis.text.x=element_text(size = 14),
axis.text.y = element_text(size = 14),
strip.text.y = element_text(size=18, face = 'bold'),
plot.title = element_text(size = 20, face = 'bold'),
#axis.title.x =element_text(size=18,face="bold"),
axis.title.y=element_blank(),
axis.title.x=element_blank(),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
stat_summary(fun="median",geom="point", size=13, color="red", shape=95)
disperplot.its.bc
NC
NC.tax <- merge(NC, tax.ed, by="OTUID")
View(NC.tax)
zotu.decon$OTUs.removed # remove 18 OTUs
zotu.tab
sort(rowSums(NC, na.rm = FALSE, dims = 1), decreasing = F)
NC
NC <- column_to_rownames(NC,var="OTUID")
NC
sort(rowSums(NC, na.rm = FALSE, dims = 1), decreasing = F)
NC1=NC[which(rowSums(NC) > 0),]
sort(rowSums(NC1, na.rm = FALSE, dims = 1), decreasing = F)
NC1
NC1 <- rownames_to_column(NC1,var="OTUID")
NC1.tax <- merge(NC1, tax.ed, by="OTUID")
View(NC1.tax)
dim(zotu.tab) #there are 31 otus and 64 samples
#merge otu.dec.table with taxonomy to have match taxonomy table
head(tax.ed)
#read the unfiltered zotu table
zotu.unfil <- read.table(file = 'ZOTU_table_tax.tsv', sep = '\t', header = TRUE,check.names = FALSE)
setwd('/Users/arifinabintarti/Documents/PAPER/PAPER_Bintarti_2021_Bean_Rainoutshelter/ZOTU/20210601_16SV4')
wd <- print(getwd())
#read the unfiltered zotu table
zotu.unfil <- read.table(file = 'ZOTU_table_tax.tsv', sep = '\t', header = TRUE,check.names = FALSE)
zotu.unfil
tax.unfil <- zotu.unfil[,'taxonomy']
tax.unfil
#write.csv(tax.unfil, file = "tax.unfil.csv")
dim(zotu.unfil)
zotu.unfil <- zotu.unfil[,-81]
dim(zotu.unfil) # zotu= 122, zotu table still has Mock, NC, and PC in the sample
zotu.unfil <- column_to_rownames(zotu.unfil,var = "ZOTUID")
zotu.unfil <- column_to_rownames(zotu.unfil,var = "ZOTUID")
setwd('/Users/arifinabintarti/Documents/PAPER/PAPER_Bintarti_2021_Bean_Rainoutshelter/ZOTU/20210601_16SV4')
wd <- print(getwd())
#read the unfiltered zotu table
zotu.unfil <- read.table(file = 'ZOTU_table_tax.tsv', sep = '\t', header = TRUE,check.names = FALSE)
zotu.unfil
tax.unfil <- zotu.unfil[,'taxonomy']
tax.unfil
#write.csv(tax.unfil, file = "tax.unfil.csv")
dim(zotu.unfil)
zotu.unfil <- zotu.unfil[,-81]
dim(zotu.unfil) # zotu= 122, zotu table still has Mock, NC, and PC in the sample
zotu.unfil <- column_to_rownames(zotu.unfil,var = "ZOTUID")
sort(rowSums(zotu.unfil, na.rm = FALSE, dims = 1), decreasing = F)
#read taxonomy
tax.unfil.ed = read.csv("tax.unfil.ed.csv", header=T)
rownames(tax.unfil.ed) <- rownames(zotu.unfil)
dim(tax.unfil.ed)
#select only biological sample from zotu table
zotu.bio.unfil <- zotu.unfil[,1:64] #unselect Mock, NC, and PC from the zotu table
dim(zotu.bio.unfil)
sort(rowSums(zotu.bio.unfil, na.rm = FALSE, dims = 1), decreasing = F)
# remove zOTUs that do not present in sample
zotu.bio1.unfil <- zotu.bio.unfil[which(rowSums(zotu.bio.unfil) > 0),]
dim(zotu.bio1.unfil) # zotu= 99, zotu table before normalization using metagenomeSeq package and before decontamination
sort(rowSums(zotu.bio1.unfil, na.rm = FALSE, dims = 1), decreasing = F)
# load the zotu table
head(zotu.bio1.unfil)
zotu.bio1.unfil <- rownames_to_column(zotu.bio1.unfil, var = "ZOTUID")
# merge the taxonomy with otu table
head(tax.unfil.ed)
tax.unfil.ed <- rownames_to_column(tax.unfil.ed, var = "ZOTUID")
zotu.tax.unfil <- merge(zotu.bio1.unfil, tax.unfil.ed, by="ZOTUID")
dim(zotu.tax.unfil)
#edit the taxonomy
zotu.tax.unfil.ed <- zotu.tax.unfil %>%
mutate(Taxonomy = case_when(Family == "Chloroplast" ~ 'Chloroplast',
Family == "Mitochondria" ~ 'Mitochondria',
Family == "Magnoliophyta" ~ 'Magnoliophyta',
TRUE ~ 'Bacteria')) %>%
mutate(Kingdom = case_when(Family == "Chloroplast" ~ 'Plant',
Family == "Mitochondria" ~ 'Plant',
Family == "Magnoliophyta" ~ 'Plant',
TRUE ~ 'Bacteria'))
tail(zotu.tax.unfil.ed)
zotu.tax.unfil.ed1 <- zotu.tax.unfil.ed[,c(1:65,73:74)]
colnames(zotu.tax.unfil.ed1)
tail(zotu.tax.unfil.ed1)
long.dat <- gather(zotu.tax.unfil.ed1, Sample, Read, 2:65, factor_key = T)
long.dat
df.unfil <- long.dat %>%
group_by(Sample, Kingdom) %>%
summarize(read.number = sum(Read))
df.unfil1 <- df.unfil %>%
group_by(Sample) %>%
mutate(percent= prop.table(read.number) * 100)
with(df.unfil1, sum(percent[Sample ==  "1001"]))
library(ggbeeswarm)
library(ggtext)
plot.unfil.king <- ggplot(df.unfil1, aes(x=Kingdom, y=percent, fill=Kingdom))+
geom_violin(trim = F, scale="width") +
#geom_beeswarm(dodge.width = 1, alpha = 0.3)+
scale_fill_manual(labels = c("Bacteria","Plant"),values=c("#88CCEE", "#117733"))+
geom_jitter(position = position_jitter(width = 0.1, height = 0, seed=13), alpha=0.3)+
theme_bw()+
expand_limits(x = 0, y = 0)+
#geom_text(data=sum_rich_plant_new, aes(x=Plant,y=2+max.rich,label=Letter), vjust=0)+
labs(title = "A")+
ylab("Read Proportion (%)")+
theme(legend.position="none",
#axis.text.x=element_blank(),
#axis.ticks.x = element_blank(),
axis.title.x = element_blank(),
axis.text= element_text(size = 14),
strip.text = element_text(size=18, face = 'bold'),
plot.title = element_text(size = 14, face = 'bold'),
#axis.title.y=element_text(size=13,face="bold"),
axis.title.y = element_markdown(size=15,face="bold"),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
#plot.margin = unit(c(0, 0, 0, 0), "cm"))
stat_summary(fun="median",geom="point", size=7, color="red", shape=95)
plot.unfil.king
setwd('/Users/arifinabintarti/Documents/PAPER/PAPER_Bintarti_2021_Bean_Rainoutshelter/ZOTU/20210601_16SV4')
zotu <- read.table('ZOTUtable-no-mitoch-no-chloro_tax.tsv', sep='\t', header=T, row.names = 1, check.names = FALSE)
zotu
tax <- zotu[,'taxonomy']
str(tax)
#write.csv(tax, file = "tax.fil.csv")
dim(zotu)
zotu <- zotu[,-80]
dim(zotu) # otu= 103, otu table still has Mock, NC, and PC in the sample
sort(rowSums(zotu, na.rm = FALSE, dims = 1), decreasing = F)
#read taxonomy
tax.ed = read.csv("tax.fil.ed.csv", header=T)
rownames(tax.ed) <- rownames(zotu)
dim(tax.ed)
#select only biological sample from zotu table
zotu.bio <- zotu[,1:64] #unselect Mock, NC, and PC from the zotu table
dim(zotu.bio)
sort(rowSums(zotu.bio, na.rm = FALSE, dims = 1), decreasing = F)
# remove zOTUs that do not present in sample
zotu.bio1=zotu.bio[which(rowSums(zotu.bio) > 0),]
dim(zotu.bio1) # otu= 80, zotu table before normalization using metagenomeSeq package and before decontamination
sort(rowSums(zotu.bio1, na.rm = FALSE, dims = 1), decreasing = F)
# merge zotu.bio1 with taxonomy to have match taxonomy table
head(zotu.bio1)
zotu.bio1 <- rownames_to_column(zotu.bio1,var = "ZOTUID")
tax.ed <- rownames_to_column(tax.ed,var = "ZOTUID")
zotu.bio1.tax <- merge(zotu.bio1, tax.ed, by="ZOTUID")
dim(zotu.bio1.tax)
#  separate  the sample
# otu table
zotu.bac.fil <- zotu.bio1.tax[,c(1:65)]
head(zotu.bac.fil)
zotu.bac.fil <- column_to_rownames(zotu.bac.fil,var="ZOTUID")
sum(zotu.bac.fil)
#otu table of the negative control
NC <- zotu[,c(72:78)]#only negative control
NC
NC <- column_to_rownames(NC,var="ZOTUID")
NC
#otu table of the negative control
NC <- zotu[,c(72:78)]#only negative control
NC
sort(rowSums(NC, na.rm = FALSE, dims = 1), decreasing = F)
NC1=NC[which(rowSums(NC) > 0),]
sort(rowSums(NC1, na.rm = FALSE, dims = 1), decreasing = F)
NC1 <- rownames_to_column(NC1,var="ZOTUID")
NC1.tax <- merge(NC1, tax.ed, by="ZOTUID")
#merge otu.NC to otu bac and put otu.NC as the first column
head(NC1)
#NC1 <- rownames_to_column(NC1, var = "ZOTUID")
head(zotu.bio1)
#otu.bac1 <- rownames_to_column(otu.bac1, var = "OTU.ID")
zotu.NC1.bac <- merge(NC1, zotu.bio1, by="ZOTUID")
dim(zotu.NC1.bac)
#decontamination
zotu.decon <- decon(data = zotu.NC1.bac, numb.blanks = 7, numb.ind = 64, taxa = F)
zotu.decon$OTUs.removed # remove 18 OTUs
zotu.tab <- as.data.frame(zotu.decon$decon.table)
#remove NC from the otu.dec.table
zotu.tab <- zotu.tab[,c(1,3:66)]
dim(zotu.tab) #there are 31 otus and 64 samples
zotu.tab
dim(zotu.bio)
sort(rowSums(zotu.bio, na.rm = FALSE, dims = 1), decreasing = F)
#merge otu.NC to otu bac and put otu.NC as the first column
head(NC)
NC <- rownames_to_column(NC, var = "ZOTUID")
head(zotu.bio)
#otu.bac1 <- rownames_to_column(otu.bac1, var = "OTU.ID")
zotu.NC.bac <- merge(NC, zotu.bio, by="ZOTUID")
head(zotu.bio)
zotu.bio <- rownames_to_column(zotu.bio, var = "ZOTU.ID")
zotu.NC.bac <- merge(NC, zotu.bio, by="ZOTUID")
#merge otu.NC to otu bac and put otu.NC as the first column
head(NC)
head(zotu.bio)
#select only biological sample from zotu table
zotu.bio <- zotu[,1:64] #unselect Mock, NC, and PC from the zotu table
dim(zotu.bio)
zotu.bio <- rownames_to_column(zotu.bio, var = "ZOTUID")
head(zotu.bio)
zotu.NC.bac <- merge(NC, zotu.bio, by="ZOTUID")
dim(zotu.NC.bac)
#decontamination
zotu.decon <- decon(data = zotu.NC.bac, numb.blanks = 7, numb.ind = 64, taxa = F)
zotu.decon$OTUs.removed # remove 18 OTUs
zotu.tab <- as.data.frame(zotu.decon$decon.table)
#remove NC from the otu.dec.table
zotu.tab <- zotu.tab[,c(1,3:66)]
zotu.tab
dim(zotu.tab) #there are 31 otus and 64 samples
#merge otu.dec.table with taxonomy to have match taxonomy table
head(tax.ed)
head(zotu.tab)
#taxonomy <- rownames_to_column(taxonomy, var = "OTU.ID")
otu.tab.tax <- merge(otu.tab, taxonomy, by = "ZOTUID")
#taxonomy <- rownames_to_column(taxonomy, var = "OTU.ID")
zotu.tab.tax <- merge(zotu.tab, tax.ed, by = "ZOTUID")
zotu.tab.tax
colnames(zotu.tab.tax)
#separate the otu table and taxonomy table
#otu table
decon.zotu <- data.frame(zotu.tab.tax[,c(1:65)])
dim(decon.zotu) #211 otus, 47samples
tax <- data.frame(zotu.tab.tax[,c(1,66:72)], row.names = 1)
dim(tax) #211 otus, 7columns/levels
head(decon.zotu)
zotu.tab <- as.data.frame(zotu.decon$decon.table)
#remove NC from the otu.dec.table
zotu.tab <- zotu.tab[,c(1,3:66)]
zotu.tab
dim(zotu.tab) #there are 54 otus and 64 samples
#merge otu.dec.table with taxonomy to have match taxonomy table
head(tax.ed)
head(zotu.tab)
#taxonomy <- rownames_to_column(taxonomy, var = "OTU.ID")
zotu.tab.tax <- merge(zotu.tab, tax.ed, by = "ZOTUID")
zotu.tab.tax
#separate the otu table and taxonomy table
#otu table
decon.zotu <- dzotu.tab.tax[,c(1:65)]
#separate the otu table and taxonomy table
#otu table
decon.zotu <- zotu.tab.tax[,c(1:65)]
colnames(decon.zotu)
tax <- zotu.tab.tax[,c(1,66:72)]
colnames(tax)
head(decon.zotu)
decon.zotu <- column_to_rownames(decon.zotu, var = "ZOTUID")
sort(colSums(decon.zotu, na.rm = FALSE, dims = 1), decreasing = F)
sort(rowSums(decon.zotu, na.rm = FALSE, dims = 1), decreasing = F)
#sort(colSums(decon.zotu, na.rm = FALSE, dims = 1), decreasing = F)
sort(rowSums(decon.zotu, na.rm = FALSE, dims = 1), decreasing = F)
#remove ZOTUs that do not present in sample:
decon.zotu1=decon.zotu[which(rowSums(decon.zotu) > 0),]
sort(rowSums(decon.zotu, na.rm = FALSE, dims = 1), decreasing = F)
decon.zotu1=decon.zotu[which(rowSums(decon.zotu) > 0),]
sort(rowSums(decon.zotu1, na.rm = FALSE, dims = 1), decreasing = F)
zotu
dim(zotu.bio)
sort(rowSums(zotu.bio, na.rm = FALSE, dims = 1), decreasing = F)
#select only biological sample from zotu table
zotu.bio <- zotu[,1:64] #unselect Mock, NC, and PC from the zotu table
dim(zotu.bio)
head(zotu.bio)
zotu.bio <- rownames_to_column(zotu.bio, var = "ZOTUID")
sort(rowSums(zotu.bio, na.rm = FALSE, dims = 1), decreasing = F)
zotu.bio
sort(rowSums(zotu.bio, na.rm = FALSE, dims = 1), decreasing = F)
#select only biological sample from zotu table
zotu.bio <- zotu[,1:64] #unselect Mock, NC, and PC from the zotu table
dim(zotu.bio)
zotu.bio
sort(rowSums(zotu.bio, na.rm = FALSE, dims = 1), decreasing = F)
# remove zOTUs that do not present in sample
zotu.bio1=zotu.bio[which(rowSums(zotu.bio) > 0),]
dim(zotu.bio1) # otu= 80, zotu table before normalization using metagenomeSeq package and before decontamination
sort(rowSums(zotu.bio1, na.rm = FALSE, dims = 1), decreasing = F)
# merge zotu.bio1 with taxonomy to have match taxonomy table
head(zotu.bio1)
zotu.bio1 <- rownames_to_column(zotu.bio1,var = "ZOTUID")
tax.ed <- rownames_to_column(tax.ed,var = "ZOTUID")
zotu.bio1.tax <- merge(zotu.bio1, tax.ed, by="ZOTUID")
dim(zotu.bio1.tax)
# merge zotu.bio1 with taxonomy to have match taxonomy table
head(zotu.bio1)
#tax.ed <- rownames_to_column(tax.ed,var = "ZOTUID")
zotu.bio1.tax <- merge(zotu.bio1, tax.ed, by="ZOTUID")
dim(zotu.bio1.tax)
sum(zotu.bac.fil)
zotu.bac.fil
#loading count data (otu)
decon.zotu1
dim(zotu.bac.fil)
#loading count data (otu)
dim(decon.zotu1)
t(zotu.bac.fil)
View(NC1.tax)
setwd('/Users/arifinabintarti/Documents/PAPER/PAPER_Bintarti_2021_Bean_Rainoutshelter/ZOTU/20210601_16SV4')
write.csv(NC1.tax, file = "NC1.tax.csv")
colnames(zotu.unfil)
#otu table of the negative control
NC.unfil <- zotu.unfil[,c(72:78)]#only negative control
NC.unfil
NC.unfil
NC.unfil <- column_to_rownames(NC,var="ZOTUID")
sort(rowSums(NC.unfil, na.rm = FALSE, dims = 1), decreasing = F)
#otu table of the negative control
NC.unfil <- zotu.unfil[,c(72:78)]#only negative control
NC.unfil
NC.unfil <- column_to_rownames(NC.unfil,var="ZOTUID")
NC.unfil
#otu table of the negative control
NC.unfil <- zotu.unfil[,c(72:78)]#only negative control
NC.unfil
#otu table of the negative control
NC.unfiltered <- zotu.unfil[,c(72:78)]#only negative control
NC.unfiltered
NC.unfiltered
#NC.unfiltered <- column_to_rownames(NC.unfiltered,var="ZOTUID")
sort(rowSums(NC.unfiltered, na.rm = FALSE, dims = 1), decreasing = F)
NC1.unfiltered=NC.unfiltered[which(rowSums(NC.unfiltered) > 0),]
sort(rowSums(NC1.unfiltered, na.rm = FALSE, dims = 1), decreasing = F)
NC1.unfiltered <- rownames_to_column(NC1.unfiltered,var="ZOTUID")
NC1.tax.unfiltered <- merge(NC1.unfiltered, tax.unfil.ed, by="ZOTUID")
write.csv(NC1.tax.unfiltered, file = "NC1.tax.unfiltered.csv")
sort(rowSums(zotu.unfil, na.rm = FALSE, dims = 1), decreasing = F)
setwd('/Users/arifinabintarti/Documents/PAPER/PAPER_Bintarti_2021_Bean_Rainoutshelter/ZOTU/20210601_16SV4')
wd <- print(getwd())
#read the unfiltered zotu table
zotu.unfil <- read.table(file = 'ZOTU_table_tax.tsv', sep = '\t', header = TRUE,check.names = FALSE)
zotu.unfil
tax.unfil <- zotu.unfil[,'taxonomy']
tax.unfil
#write.csv(tax.unfil, file = "tax.unfil.csv")
dim(zotu.unfil)
zotu.unfil <- zotu.unfil[,-81]
dim(zotu.unfil) # zotu= 122, zotu table still has Mock, NC, and PC in the sample
zotu.unfil <- column_to_rownames(zotu.unfil,var = "ZOTUID")
sort(rowSums(zotu.unfil, na.rm = FALSE, dims = 1), decreasing = F)
#read taxonomy
tax.unfil.ed = read.csv("tax.unfil.ed.csv", header=T)
rownames(tax.unfil.ed) <- rownames(zotu.unfil)
dim(tax.unfil.ed)
zotu.unfil
zotu.unfil <- rownames_to_column(zotu.unfil,var = "ZOTUID")
tax.unfil.ed
tax.unfil.ed <- rownames_to_column(tax.unfil.ed,var = "ZOTUID")
zotu.tax.unfiltered <- merge(zotu.unfil, tax.unfil.ed, by="ZOTUID")
write.csv(zotu.tax.unfiltered, file = "zotu.tax.unfiltered.csv")
